.. article::
   :date: 2018-09-09
   :title: Git のメモ
   :category: git
   :tags:
   :canonical_url: /git/note/


==================
Git のメモ
==================

GitとGitHubは別物
===================

Git
--------
バージョン管理システム(VCS)。時間の経過ととともに加えられる変更を記録し、特定のバージョンを呼び出したりする。

GitHub
--------
Gitで作成したリポジトリをホスティングするためのWebサービス。名前の通りGitを使うHub(拠点)になる場所。


fetch と pull
===================

fetch
-----------
リモートリポジトリの最新の履歴の取得だけを行う。

- ``hogehoge`` ブランチをfetchすると、 ローカルの ``origin/hogehoge`` がリモートの ``origin/hogehoge`` リポジトリと同期されて最新状態になる。
- ローカルの ``hogehoge`` ブランチは、そのまま何にも変更されない。

pull
-----------
fetch + merge

- ``hogehoge`` ブランチを pull すると、 ローカルの ``origin/hogehoge`` も ``hogehoge`` も両方リモートの ``origin/hogehoge`` リポジトリの変更とマージされる。
- 内部的には、

  1. リモートの ``origin/hogehoge`` と、ローカルの ``origin/hogehoge`` とマージ
  2. ローカルの ``origin/hogehoge`` と ``hogehoge`` をマージ

- ローカルの ``hogehoge`` に、自分の変更とリモートの変更と両方入った状態になる。
- 競合があったら自分で解決してコミットする必要がある。
- 通常、ローカルで触るのは ``origin`` がついてない ``hogehoge`` ブランチ


Gitの基本
===================
- https://git-scm.com/book/ja/v2/%E4%BD%BF%E3%81%84%E5%A7%8B%E3%82%81%E3%82%8B-Git%E3%81%AE%E5%9F%BA%E6%9C%AC
- スナップショットで、差分ではない


3.6 Git のブランチ機能 - リベース
======================================
- https://git-scm.com/book/ja/v2/Git-%E3%81%AE%E3%83%96%E3%83%A9%E3%83%B3%E3%83%81%E6%A9%9F%E8%83%BD-%E3%83%AA%E3%83%99%E3%83%BC%E3%82%B9


git submodule
===================
- https://git-scm.com/book/ja/v2/Git-%E3%81%AE%E3%81%95%E3%81%BE%E3%81%96%E3%81%BE%E3%81%AA%E3%83%84%E3%83%BC%E3%83%AB-%E3%82%B5%E3%83%96%E3%83%A2%E3%82%B8%E3%83%A5%E3%83%BC%E3%83%AB


origin の謎が解けた
======================================
``origin`` は「リモートリポジトリの〜」という意味。

``hogehoge`` ブランチを作成すると、

1. ``hogehoge``
2. ``origin/hogehoge``

という二つのブランチができる。

1. はローカルにある自分のブランチ
2. はローカルにあるリモートと同期用のブランチ。手動で更新しない限り、最後に同期したタイミングのスナップショット状態。


master の謎が解けた
======================================
``master`` は、

- 物理的には単なるブランチに過ぎないが、
- 意味的には「本番リリース用のブランチ」、みたいなもの。
