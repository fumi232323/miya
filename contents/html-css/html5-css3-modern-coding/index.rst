.. article::
   :date: 2018-07-01
   :title: 『HTML5/CSS3モダンコーディング フロントエンドエンジニアが教える3つの本格レイアウト スタンダード・グリッド・シングルページレイアウトの作り方』を読んで気になったことメモ
   :category: css
   :canonical_url: /html-css/html5-css3-modern-coding/
   :draft: false


====================
気になったことメモ
====================


読んだ本
=========================
`HTML5/CSS3モダンコーディング フロントエンドエンジニアが教える3つの本格レイアウト スタンダード・グリッド・シングルページレイアウトの作り方 <https://www.shoeisha.co.jp/book/detail/9784798141572>`_


気になったことめも
=========================

要素名ではなくクラスに対してスタイルを指定する
----------------------------------------------------------------
- ID は HTML 、 JavaScript からの特定に使用し、 CSS セレクタでは使用しないというようにルールを作ると、影響範囲を分離できるので、管理がしやくすくなるメリットがある。


reset.css を設けるメリット
----------------------------------------------------------------
- ブラウザごとに UA スタイルシートがあるため、適用される値のずれにより、同じ HTML でもブラウザ間で表示が異なってしまう。
- これから自分で書いていくスタイルと UA スタイルシートの間に食い違いがあると、 UA スタイルシートの不要なスタイルをわざわざ打ち消さなければならない。
- (reset.css を設けることで、) UA スタイルシートによる装飾をある程度まで打ち消し、ブラウザ間の差異をなくすことができる。


ブロックレベル要素とインライン要素
----------------------------------------------------------------
- HTML5 ではその分類は廃止された
- CSS の display プロパティの値が要素の種類ごとにそれぞれ定められていることは変わらない
- inline の要素に高さを持たせたいときは、 display プロパティに inline-block か block の指定が必要


レスポンシブWebデザイン
----------------------------------------------------------------
- どのデバイスでも同じ HTML を表示しつつ画面幅によって動的に CSS を切り替えて常に最適な表示が行われるようにする方法。
- スマートフォン対応の第一歩は、 viewport の設定です。


お礼
=========================
言われた通りに書いていくと、ちゃんとなる賢い本でした（すごい！）。

グリッドデザインが楽しすぎたので、ブログの一覧ページにしました。ありがとうございました。
