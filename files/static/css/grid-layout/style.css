@charset "UTF-8";

/* --------------------------------
 * base
 * -------------------------------- */
html {
    font-size: 62.5%;
}
body {
    padding: 30px;
    /* background-color: #f6f7fb; fbfaf5 */
    background-color: #f8f4e6;
    color: #333333;
    font-size: 1.2rem;
    font-family: Griffy, "Hiragino Kaku Gothic ProN", Meiryo, sans-serif;
}

/*
    - 擬似要素を存在させるには、 CSS で擬似要素の中身を指定する content プロパティの指定。P.103を見よ。
    - ::before, ::after 擬似要素の display プロパティの初期値は inline なので、デフォルトではインラインレベルの要素として表示される。
    - 高さや幅を指定したい場合には、 display プロパティに block や inline-block の指定が必要。
 */
*, *::before, *::after {  /* `*`: 全称セレクタといい、すべての要素を表す。 */
    box-sizing: border-box;  /* padding と border を含めた要素全体のサイズを width と height で指定できるようになる。 */
}
a:link, a:visited, a:hover, a:active {
    color: #7C5119;
    text-decoration: none;
}

/* --------------------------------
 * header
 * -------------------------------- */
.header {
    padding: 25px 0;  /* 上下の余白 */
    border-bottom: none;
    text-align: center;
}
.logo {
    width: 140px;       /* 外枠のサイズ。 i 要素の display プロパティの初期値は inline ですが、 Font Awesome の CSS により inline-block になってるので、サイズ指定できる。 */
    height: 140px;
    /*
    border: 4px solid;
    border-color: #7C5119;
    */
    border-radius: 50%;     /* 丸型にする */
    background-color: #7C5119;
    color: #FFFFFF;         /* アイコンの色を指定 */
    font-size: 8rem;        /* アイコンはアイコンフォントなので、 font-size プロパティで大きさを指定する。 */
    line-height: 140px;     /* 縦方向の中央寄せ。高さの 150px から上下の border4px * 2 分を除いた値。 */
    transition: transform 0.3s;  /* 回っていることがわかるように、0.3秒かけて変化させる */
}
/* ロゴ画像をホバーすると1回転する */
.logo:hover {
    transform: rotate(360deg);  /* 360度回転 */
}
.nav {
    margin: 35px auto 10px;  /* nav の上部に間隔をあける */
}
.nav-category {
    margin-top: 20px;   /* リスト項目の間を20pxずつあける。一番上の項目はマージンが相殺されるので空き過ぎないとのこと。 */
    /* ブロックレベル要素のマージンは相殺される
     * - 隣接した要素の上下のマージン（マージンの値が異なる場合は大きほうになる）
     * - 入れ子になった要素の上下のマージン
     */
    text-align: center;
    letter-spacing: 1px;
    font-weight: bold;
    font-size: 2.0rem;
}
/* リンクをホバーしたときに、下線が中央から両側に伸びて表示されるような動きをつける。 */
.nav-category a {
    display: inline-block;  /* a要素の幅をリンクテキストと同じに保ちつつ子要素の%指定を有効にする。 */
}
.nav-category a::after {
    content: '';
    display: block;         /* ブロックレベルの::after擬似要素を作る */
    width: 0;               /* 通常時には見えないように横幅を 0 にする */
    margin: 6px auto 0;     /* リンクテキストとの間隔をあける。左右に auto を指定して中央寄せにする */
    border-bottom: 1px solid #7C5119;
    transition: width 0.3s ease-in-out;
    /* ホバーしたときに横幅の変化がアニメーションするよう、 transition プロパティに width を指定。 */
    /* ease-in-out: タイミング関数のキーワード。線が伸びる始まりと終わりで伸びる速度を緩めることができる。 */
}
.nav-category a:hover::after {
    width: 100%;     /* リンクにホバーしたときの ::after 擬似要素の横幅を指定 */
}
.nav-article {
    margin-top: 5px;
    font-weight: normal;
    font-size: 1.1rem;
}
.nav-article a::after {
    margin: 3px auto 0;
}

/* --------------------------------
 * box
 * -------------------------------- */
.item {
    width: 180px;
    margin-bottom: 4px;  /* ボックス間の隙間 */
    padding: 8px;        /* ボックス内の余白 */
    border-bottom: 3px solid;
    border-radius: 5px;
    background-color: #FFFFFF;
}
/* box中 */
.item-m {
    width: 364px;  /* item * 2 + 間の隙間4 */
}
/* box大 */
.item-l {
    width: 732px;  /* item-m * 2 + 間の隙間4 */
}
.item .image {
    display: block;  /* 縦に並ぶブロックレベル要素 */
    width: 100%      /* ボックス内側の padding を除いたエリアいっぱいに表示 */
}
.item .title {
    margin: 15px 9px 10px;  /* 下の margin は p 要素の line-height の分少なくする */
    color: #aaaaaa;
    letter-spacing: 1px;

}
/* カテゴリー左横の円 */
.item .title::before {
    content: '';            /* before擬似要素を表示するために指定 */
    display: inline-block;  /* 円の横幅と高さを指定したいので。横並び。 */
    width: 19px;
    height: 19px;
    margin-right: 5px;
    border: 2px solid;
    border-radius: 50%;     /* 50%で円になる */
    vertical-align: -5px;   /* 縦方向の位置調整 */
}
.item .category {  /* 行間と間隔を指定 */
    margin: 10px 10px 5px;
    line-height: 1.5;
}
.item .date {  /* 行間と間隔を指定 */
    display: block;
    margin: 5px 10px 10px;
    line-height: 1.5;
}
.item .description {
    margin: 10px;
    line-height: 1.5;
}
.item > a {
    display: block;
    margin: -8px -8px -11px;    /* ネガティブマージンを使って a 要素を .item と同じ大きさまで外側に広げる */
    padding: 8px 8px 11px;      /* 同じ幅の padding を持たせて a 要素と .item をぴったり重ねる */
    border-radius: inherit;     /* 親要素の値を引き継ぐ。どのCSSプロパティにも指定できる。 */
    color: #777777;             /* a 要素の中はリンクテキストとして文字色が変わってしまうので、文字色を指定しなおす。 */
    transition: all 0.3s;       /* 0.3秒かけてスムーズに変わるように指定 */
}
.item > a:hover {
    box-shadow: 0 0 6px -1px rgba(0, 0, 0, 0.3);  /* ボックスの周りに影を落とす */
    opacity: 0.8;  /* ハイライトのような効果 */
}
/* ホバーしたときにだけアニメーションしながら現れるようにする */
.item {
    overflow: hidden;  /* ボックスの外側にはみ出ているときは完全に隠す。触れないようにする。 */
}
.item .image {
    position: relative;
}
.item .image img {
    width: 100%;
}
/* ホバーしたときに画像部分を暗くする */
.item > a .image::before {         /* リンクになっているボックスのみに表示したいので、 .item 直下の a 要素の ::before 擬似要素を使用する */
    content: '';
    position: absolute;
    /* Mansonry によって,自動的に .item に position: absolute が指定されているので、
     * 中の ::before 擬似要素を position: absolute にすると .item を基準として配置される。
     */
    top: 0;
    right: 0;
    bottom: 0;
    left: 0;
    background: rgba(0, 0, 0, 0.5);
    opacity: 0;     /* 普段は非表示 */
    transition: opacity 0.3s linear;
}
.item > a:hover .image::before {
    opacity: 1;     /* ホバー時は表示 */
}
/* MORE の表示 */
.item > a .image::after {
    content: 'MORE';
    position: absolute;
    top: 50%;
    left: 150%;     /* 最初はボックスの外にはみ出させておく */
    display: block;
    width: 100px;   /* MORE 箱の幅 */
    margin-top: -19px;
    margin-left: -50px;
    padding: 8px;
    border: 3px solid #FFFFFF;
    color: #FFFFFF;
    text-align: center;
    letter-spacing: 3px;
    font-size: 1.6rem;

    opacity: 0;     /* 普段は非表示 */
    transition: all 0.3s ease-in-out;
}
.item > a:hover .image::after {
    left: 50%;      /* ホバー時は真ん中 */
    opacity: 1;     /* ホバー時は表示 */
}

/* カテゴリーごとに色分け */
.item-maindish,
.item-maindish .title::before {
    border-color: #FFC0CB;
}
.item-appetizer,
.item-appetizer .title::before {
    border-color: #76C047;
}
.item-column,
.item-column .title::before {
    border-color: #FFF100;
}
.item-breaktime,
.item-breaktime .title::before {
    border-color: #C1EFFF;
}