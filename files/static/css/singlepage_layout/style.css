@charset "UTF-8";

/* --------------------------------
 * base
 * -------------------------------- */
html {
    font-size: 62.5%;
}
*, *::before, *::after { /* `*`: 全称セレクタといい、すべての要素を表す。 */
    box-sizing: border-box; /* padding と border を含めた要素全体のサイズを width と height で指定できるようになる。 */
}

/* --------------------------------
 * body
 * -------------------------------- */
body {
    background:
        #151515  /* 万が一、画像が表示されなかった場合用に背景色にも黒を指定。 */
        url("../../images/singlepage_layout/bg.png") no-repeat  /* 黒ベースの背景画像 */
        fixed  /* 背景画像がスクロールされないように指定。ページをスクロールするごとに文章と背景の位置にズレが生じ、よりシングルレイアウトらしい視覚効果を生み出すことができる。 */
        left bottom;
    background-size: cover;  /* 背景に指定した画像で領域全体を覆う */
    color: #FFFFFF;
    text-align: center;
    font-size: 1.4rem;
    font-family: Raleway, "Hiragino Kaku Gothic ProN", Meiryo, sans-serif;
    /* font-family の指定は左から順に適用される */
    /* Web フォント機能: CSS3 から追加された。 https://fonts.google.com/?selection.family=Raleway:400,700
     * 使用したいフォントファイルを Web サーバーにアップロードして参照することで、
     * 閲覧者のデバイスに入っていないフォントでも Web ページのテキストの表示に使用することができる。
     * 画像と同様に、フォントファイルの読み込み時間に注意すること。 */
}

/* --------------------------------
 * header
 * -------------------------------- */
.header {
    padding: 170px 30px 80px;
}
.site-title-sub {
    margin: 0 0 30px;
    letter-spacing: 1px;
    font-size: 2.2rem;
}
/* テキストの両端に伸びる線 */
.site-title-sub::before,
.site-title-sub::after {
    content: '';
    display: inline-block;  /* テキストの横に並ばせる */
    width: 140px;
    height: 2px;
    margin: 0 30px;
    background-color: #FFFFFF;
    vertical-align: middle;  /* 線が縦方向で文字の中央にくるように */
}
.site-title {
    margin: 50px 0 40px;
    font-size: 7.6rem;
}
.site-description {
    margin-bottom: 50px;
    color: #888888;
    font-size: 1.6rem;
}

/* ボタン デフォルト*/
.button {
    display: inline-block;  /* ボタンは縦横幅を指定しつつ横に文字や要素を並べる場合も多いので、 inline-block にしておく */
    width: 200px;
    padding: 20px;
    border-radius: 4px;
    background-color: #afa58d;
    color: #FFFFFF;
    text-decoration: none;  /* リンクの下線を表示しない */
    letter-spacing: 1px;
    font-size: 1.2rem;
}
.button:hover {
    opacity: 0.9; /* ホバーしたときに透明度を下げて、触れていることがわかるようにする */
}
/* ボタン 通常のボタンよりも注目させるやつ */
.button-showy {
    background-color: #f1b400;  /* CSS セレクタの詳細度が同じ場合は後に書かれたスタイルで上書きされていく */
}
/* 隣り合ったボタン同士がくっつかないようにする */
.buttons .button {
    margin: 10px;
}

/* --------------------------------
 * section1: ABOUT ME
 * -------------------------------- */
.about {
    padding: 80px 30px;
    background-color: #FFFFFF;
    color: #333333;
}
/* 見出し */
.heading {
    position: relative;  /* 見出しの下線の位置指定ができるように親要素には relative を指定する。 */
    display: inline-block;
    margin: 30px 0 15px;
    padding-bottom: 15px;
    letter-spacing: 2px;
    font-size: 4rem;
}
/* 見出しの下線 */
.heading::before,
.heading::after {
    content: '';
    position: absolute;  /* 位置指定を有効にする。 */
    right: 0;            /* 擬似要素の右端が .heading の右端とぴったり合わさる */
    bottom: 0;           /* .heading の最下部に配置 */
    left: 0;             /* 擬似要素の左端が .heading の左端とぴったり合わさる */
    border-bottom: 1px solid #999999;
}
/* 線が重ならないように 5px 上へずらす */
.heading::before {
    bottom: 5px;
}

/* 自己紹介文 */
.about-text {
    margin: 30px 0;
    line-height: 2.5;
}

/* --------------------------------
 * section2: WORKS
 * -------------------------------- */
.works {
    background-color: #383634;
    padding: 80px 0;
}
/* table 風レイアウトにする */
.works-wrapper {
    display: table;       /* テーブル */
    width: 100%;
    margin-top: 60px;     /* 見出しからのマージン */
    table-layout: fixed;  /* 横幅を均等に */
}
.work-box {
    position: relative;   /* after 擬似要素を absolute で配置するため */
    display: table-cell;  /* テーブルの中身 */
    /* position プロパティ: P.170 */
}
/* 反転画像 */
.work-box::after {
    content: '';
    position: absolute;  /* デフォルトでは inline の display プロパティが自動的に block になる */
    top: 50%;            /* 自身が下半分に収まるようにする */
    left: 0;
    width: 100%;
    height: 50%;  /* .work-box の半分の高さにする。* position: absolute の場合は、親要素にheight が指定されていなくても、%指定が有効になる。 */
    background: no-repeat;  /* 背景に画像を指定 */
    background-size: 100% 100%;  /* 背景画像の大きさを after 擬似要素とぴったり同じサイズにする */
    opacity: 0.2;                /* 半透明 */
    transform: scaleY(-1);       /* 画像を上下反転させる。値をマイナスにすると反転する。縦方向に反転して1倍。 */
}
/* 反転画像の URL を指定 */
.work-box.tree::after {
    background-image: url("../../images/singlepage_layout/tree.jpg");
}
.work-box.building::after {
    background-image: url("../../images/singlepage_layout/building.jpg");
}
.work-box.lake::after {
    background-image: url("../../images/singlepage_layout/lake.jpg");
}
.work-box.sky::after {
    background-image: url("../../images/singlepage_layout/sky.jpg");
}
.work-image {
    display: block;
    width: 100%;
    margin: 0 0 60%;  /* 画像の下方向のマージンを指定。画像と同じ大きさの領域を確保。 */
}
.work-description {
    position: absolute;
    top: 50%;           /* 上半分に50%の隙間とって、下半分に配置 */
    left: 0;
    z-index: 1;         /* 要素の重ね順を変更。値が大きいほど手前に表示される。通常は後に書いた方が手前。 */
    width: 100%;
    height: 50%;        /* 親要素の半分の高さ */
    overflow-y: auto;   /* スクロールする必要がある場合のみスクロールバーを表示 */
}
.work-description-inner {
    display: table;
    width: 100%;
    height: 100%;
    padding: 20px;
}
.work-text {
    display: table-cell;
    vertical-align: middle;  /* 縦方向の中央寄せ */
    font-size: 1.2rem;
    line-height: 2;
}
.work-text .button {
    width: 60%;
    margin-top: 20px;
    padding: 3px;
}
/* ゴーストボタン */
.button-ghost {
    border: 1px solid #FFFFFF;
    background-color: rgba(255, 255, 255, 0.15);
}
/* 画像とテキストの上下を入れ替える */
/* 奇数番目の .work-box の中の image のした方向の margin を 0 にして、上方向に 60% に指定し直す */
.work-box:nth-child(odd) .work-image {
    margin: 60% 0 0;
}
.work-box:nth-child(odd) .work-description,  /* テキスト表示領域と反転画像も上寄せにする */
.work-box:nth-child(odd)::after{
    top: 0;
}

/* --------------------------------
 * section3: MY SKILLS
 * -------------------------------- */
.skills {
    padding: 80px 0;
    background-color: #FFFFFF;
    color: #333333;
}
/* 親要素 */
.skills-wrapper {
    display: table;
    width: 80%;             /* ウィンドウの横幅に応じて伸縮させたいので */
    margin: 50px auto 0;    /* 左右の margin を auto にすると親要素に対して中央寄せになる */
    table-layout: fixed;    /* 等間隔の横並び */
}
.skill-box {
    display: table-cell;
}
.skill-icon {
    width: 150px;       /* 外枠のサイズ。 i 要素の display プロパティの初期値は inline ですが、 Font Awesome の CSS により inline-block になってるので、サイズ指定できる。 */
    height: 150px;
    margin-bottom: 30px;    /* 下のテキストとの間をとる */
    border: 4px solid;
    border-radius: 50%;     /* 丸型にする */
    color: #f1b400;         /* アイコンの色を指定 */
    font-size: 8rem;        /* アイコンはアイコンフォントなので、 font-size プロパティで大きさを指定する。 */
    line-height: 142px;     /* 縦方向の中央寄せ。高さの 150px から上下の border4px * 2 分を除いた値。 */
}
.skill-title {
    margin: 0 20px 20px;    /* 画面幅が狭くなったりテキストが長くなったりした際に隣のテキストと表示がくっついてしまわないように最低限保持したい margin を指定。 */
    font-size: 2rem;
}
.skill-text {
    margin: 0 20px;
    line-height: 2; /* 行間 */
}

/* --------------------------------
 * section4: CONTACT
 * -------------------------------- */
.contact {
    padding: 80px 0 150px;  /* 領域を確保 */
}
.contact-form {
    width: 50%;
    margin: 50px auto 0;
}
.contact-form input[type=text],  /* HTML の属性を CSS セレクタに使用 */
.contact-form textarea {
    display: block;         /* input、 textarea 要素のデフォルト値は inline-block だけど、縦に配置したいので block を指定する。 */
    width: 100%;
    margin-bottom: 10px;
    padding: 15px;          /* 枠と入力テキストの間隔 */
    outline: none;          /* デフォルトで表示される青いハイライトを消す */
    border: 1px solid rgba(255, 255, 255, 0.4);     /* すりガラスのような見た目にする */
    border-radius: 0;       /* 角が丸くならないように、明示的に 0 を指定 */
    background-color: rgba(255, 255, 255, 0.05);    /* すりガラスのような見た目にする */
    color: #FFFFFF;         /* 入力テキストの色 */
}
/* ハイライト効果 */
.contact-form input[type=text]:focus,  /* focus: その要素がフォーカスされた状態を指定 */
.contact-form textarea:focus {
    box-shadow: 0 0 8px rgba(255, 255, 255, 0.5) inset;  /* 内側に影 */
}
.contact-form textarea {
    height: 150px;
}
/*  送信ボタン */
.contact-form input[type=submit] {
    display: block;
    width: 200px;           /* 送信ボタンは幅が狭いので、広げる */
    margin: 40px auto 0;
    padding: 15px;
    border: 1px solid rgba(255, 255, 255, 0.4);
    border-radius: 5px;
    background-color: transparent;  /* 通常時の背景色は透明 */
    color: rgba(255, 255, 255, 0.6);
    cursor: pointer;                /* ホバーしたときにマウスカーソルが指の形になる */
}
.contact-form input[type=submit]:hover {
    background-color: rgba(255, 255, 255, 0.05);
}

/* --------------------------------
 * footer
 * -------------------------------- */
.footer {
    padding: 12px 0;    /* テキストの上下に余白 */
    font-size: 1.3rem;
}

/* --------------------------------
 * SP, タブレット対応
 * - メディアクエリ: 閲覧環境によってリアルタイムに CSS の有効・無効を切り替えられる機能
 *   - 条件を指定したい CSS を別ファイルに切り出し、 HTML から読み込む方法
 *     - <link rel="stylesheet" href="print.css" media="print">
 *   - 条件を指定したい CSS を別ファイルに切り出し、 CSS から読み込む方法
 *     - @import url(print.css) print
 *   - 条件を指定したい CSS を同じファイルに記述し、 メディアクエリの構文で囲む方法
 *     - ↓ これ
 * -------------------------------- */
@media (max-width: 1024px) {
    body {
        background-image: none;     /* タブレットと SP で背景画像を解除 */
    }
}
@media (max-width: 768px) {
    /* SP と縦向きに持ったタブレット用 */
    /* viewport の幅が 768px 以下の場合に適用される */
    body {
        font-size: 1.3rem;  /* 画面幅が狭いときは、ベースの文字サイズを 1px 小さくする */
    }
    .header {
        padding-top: 60px;  /* ヘッダー上部の余白を狭め */
    }
    .site-title-sub::before,
    .site-title-sub::after {
        display: block;     /* 画面幅が狭い場合は上下に罫線がくるようにする */
        width: 80%;         /* 罫線のサイズを調整 */
        margin: 10px auto;  /* 上下に間隔をとる */
    }
    .site-title-sub {
        font-size: 1.7rem;  /* サブタイトル自体も一行に収まるように文字サイズを小さくする */
    }
    .site-title {           /* タイトル文字サイズをちょうどよくする */
        margin-top: 35px;
        font-size: 5rem;
    }
    .button:hover {         /* iOS8 対応 & SPではそもそもホバースタイルは不要のため、無効化する。 */
        opacity: 1;
    }

    /* ABOUT ME */
    .heading {
        font-size: 2.5rem;
    }
    .about-text {
        line-height: 1.8;   /* 行間を調整 */
    }

    /* WORKS */
    .works-wrapper,
    .work-box {
        display: block;     /* 縦に並べなおす */
    }
    .work-image {
        display: none;      /* 画像を非表示 */
    }
    .work-description {
        position: relative; /* 説明を通常の位置に配置 */
    }
    .work-box::after {          /* 薄く表示されている背景画像を各作品紹介ブロックの大きさいっぱいに伸ばす */
        top: 0;
        height: 100%;
        background-size: cover; /* 背景画像をその要素を覆う最小サイズまで引き伸ばす */
        transform: none;        /* 画像の上下反転を元に戻す */
    }

    /* MY SKILLS */
    .skills-wrapper,
    .skill-box {
        display: block;     /* アイコンを縦に並べる */
    }
    .skill-icon {           /* アイコンサイズを小さくする */
        width: 100px;
        height: 100px;
        font-size: 5rem;
        line-height: 92px;
    }
    .skill-box {
        margin: 40px auto;  /* 上下の間隔をとる */
    }
    .skill-text {
        margin: 0;          /* 縦並びになったので、横のマージンは不要になった */
    }

    /* CONTACT */
    .contact-form {
        width: 80%;         /* 幅を広げる */
    }
    .contact {
        padding-bottom: 80px;   /* 下部の余白を調節 */
    }
}
